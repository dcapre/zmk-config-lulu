/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        tap_dance_shift: tap_dance_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp LEFT_SHIFT>;

            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  BSPC  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -    |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '    |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT  |
            //                     | ALT  | GUI  | LOWER|  ENTER |  | SPACE | RAISE|  `    | GUI   |

            bindings = <
&kp ESC     &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                         &kp N6  &kp N7     &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB     &kp Q   &kp W   &kp E     &kp R     &kp T                          &kp Y   &kp U      &kp I      &kp O    &kp P     &kp MINUS
&kp LSHIFT  &kp A   &kp S   &kp D     &kp F     &kp G                          &kp H   &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z   &kp X   &kp C     &kp V     &kp B   &kp LBKT    &kp RBKT   &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                            &kp LALT  &kp LGUI  &mo 1   &kp RET     &kp SPACE  &mo 2   &kp GRAVE  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4                    &trans     &trans     &trans           &kp HOME  &kp END        &kp DEL
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5           &kp F6                          &kp F7     &kp F8     &kp F9           &kp F10   &kp F11        &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR       &kp PRCNT                       &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR       &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &rgb_ug RGB_OFF  &trans        &trans    &trans  &trans     &kp MINUS  &trans           &trans    &kp BACKSLASH  &kp PIPE
                                                 &trans             &trans           &trans        &trans    &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans          &trans          &trans           &trans             &trans                          &trans     &trans       &trans     &trans    &trans     &trans
&kp GRAVE  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &kp K_VOLUME_UP    &kp C_VOL_UP                    &kp N6     &kp N7       &kp N8     &kp N9    &kp N0     &trans
&trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp K_VOLUME_DOWN  &kp C_VOL_DN                    &trans     &kp LEFT     &kp DOWN   &kp UP    &kp RIGHT  &trans
&trans     &trans          &trans          &trans           &mkp MCLK          &trans        &trans    &trans  &kp MINUS  &kp KP_PLUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
                                           &trans           &trans             &trans        &trans    &trans  &trans     &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        TRI_LAYER {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        SHIFT_CAPS_LAYER {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT                                     &kp CARET  &kp AMPS   &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&trans  &kp Q            &kp W   &kp E     &kp R       &kp T                                           &kp Y      &kp U      &kp I          &kp O                 &kp P                  &kp UNDER
&trans  &kp A            &kp S   &kp D     &kp F       &kp G                                           &kp H      &kp J      &kp K          &kp L                 &kp COLON              &kp DOUBLE_QUOTES
&trans  &kp Z            &kp X   &kp C     &kp V       &kp B        &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp N      &kp M      &kp LESS_THAN  &kp GREATER_THAN      &kp QUESTION           &trans
                                 &trans    &trans      &trans       &trans            &trans           &trans     &kp TILDE  &trans
            >;
        };
    };
};
